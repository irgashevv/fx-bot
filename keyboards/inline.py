from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton


def get_request_type_kb():
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–ú–Ω–µ –Ω—É–∂–Ω—ã...", callback_data="request_type_take"),
        InlineKeyboardButton(text="–Ø –æ—Ç–¥–∞–º...", callback_data="request_type_give"))
    return builder.as_markup()


def get_amount_kb(amounts, back_to_state: str = None):
    builder = InlineKeyboardBuilder()

    if amounts:
        for amount in amounts:
            builder.add(InlineKeyboardButton(text=str(amount), callback_data=f"amount_{amount}"))
        builder.adjust(4)

    add_back_button(builder, back_to_state)
    return builder.as_markup()


def get_currency_from_kb(back_to_state: str = None, exclude_currency=None):
    currencies = {
        "–¥–æ–ª–ª–∞—Ä–æ–≤...": "currency_from_USD",
        "—Å–æ–º–æ–Ω–∏...": "currency_from_TJS",
        "—Å—É–º–æ–≤...": "currency_from_UZS",
        "—Ä—É–±–ª–µ–π...": "currency_from_RUB"
    }

    builder = InlineKeyboardBuilder()
    for text, callback_data in currencies.items():
        if exclude_currency != callback_data.split('_')[1]:
            builder.add(InlineKeyboardButton(text=text, callback_data=callback_data))
    builder.adjust(4)

    add_back_button(builder, back_to_state)
    return builder.as_markup()


def get_money_type_from_kb(back_to_state: str = None):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–Ω–∞–ª–∏—á–Ω—ã—Ö...", callback_data="money_type_from_cash"),
                InlineKeyboardButton(text="–±–µ–∑–Ω–∞–ª–∏—á–Ω—ã—Ö...", callback_data="money_type_from_online"))

    add_back_button(builder, back_to_state)
    return builder.as_markup()


def get_location_from_kb(back_to_state: str = None):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–≤ –î—É—à–∞–Ω–±–µ...", callback_data="location_dushanbe"),
        InlineKeyboardButton(text="–≤ –¢–∞—à–∫–µ–Ω—Ç–µ...", callback_data="location_tashkent"),
        InlineKeyboardButton(text="–≤ –ú–æ—Å–∫–≤–µ...", callback_data="location_moscow"))
    builder.adjust(1)

    add_back_button(builder, back_to_state)
    return builder.as_markup()


def get_money_type_take_to_kb(back_to_state: str = None):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–æ—Ç–¥–∞–º –Ω–∞–ª–∏—á–Ω—ã–µ...", callback_data="money_type_to_cash"),
                InlineKeyboardButton(text="–æ—Ç–¥–∞–º –±–µ–∑–Ω–∞–ª–∏—á–Ω—ã–µ...", callback_data="money_type_to_online"))

    add_back_button(builder, back_to_state)
    return builder.as_markup()


def get_currency_to_kb(back_to_state: str = None, exclude_currency=None):
    currencies = {
        "–¥–æ–ª–ª–∞—Ä—ã...": "currency_to_USD",
        "—Å–æ–º–æ–Ω–∏...": "currency_to_TJS",
        "—Å—É–º—ã...": "currency_to_UZS",
        "—Ä—É–±–ª–∏...": "currency_to_RUB"
    }

    builder = InlineKeyboardBuilder()
    for text, callback_data in currencies.items():
        if exclude_currency != callback_data.split('_')[1]:
            builder.add(InlineKeyboardButton(text=text, callback_data=callback_data))
    builder.adjust(4)

    add_back_button(builder, back_to_state)
    return builder.as_markup()


def get_location_to_kb(back_to_state: str = None):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–≤ –î—É—à–∞–Ω–±–µ", callback_data="location_dushanbe"),
        InlineKeyboardButton(text="–≤ –¢–∞—à–∫–µ–Ω—Ç–µ", callback_data="location_tashkent"),
        InlineKeyboardButton(text="–≤ –ú–æ—Å–∫–≤–µ", callback_data="location_moscow"))
    builder.adjust(1)

    add_back_button(builder, back_to_state)
    return builder.as_markup()


def get_money_type_give_to_kb(back_to_state: str = None):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–Ω—É–∂–Ω—ã –Ω–∞–ª–∏—á–Ω—ã–µ...", callback_data="money_type_to_cash"),
                InlineKeyboardButton(text="–Ω—É–∂–Ω—ã –±–µ–∑–Ω–∞–ª–∏—á–Ω—ã–µ...", callback_data="money_type_to_online"))

    add_back_button(builder, back_to_state)
    return builder.as_markup()


def get_show_matches_kb(back_to_state: str = None):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="proceed_to_confirm"))

    builder.add(InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="req_cancel"))
    if back_to_state:
        builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back_to_{back_to_state}"))
    return builder.as_markup()


def get_confirm_kb(back_to_state: str = None):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="req_confirm"))
    builder.row(InlineKeyboardButton(text="üí¨ –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", callback_data="req_add_comment"))
    builder.add(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="req_cancel"))

    add_back_button(builder, back_to_state)
    return builder.as_markup()


def get_comment_kb(back_to_state: str = None):
    builder = InlineKeyboardBuilder()
    add_back_button(builder, back_to_state)
    return builder.as_markup()


def get_my_requests_kb(requests):
    builder = InlineKeyboardBuilder()
    if not requests:
        return builder.as_markup()

    for req in requests:
        builder.row(
            InlineKeyboardButton(
                text=f"‚ùå –ó–∞–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É #{req.id}",
                callback_data=f"close_req_{req.id}"))

    return builder.as_markup()


def get_converter_currency_kb(exclude_callback=None):
    api_currencies = {
        "üáπüáØ TJS": "cur_TJS",
        "üá∫üá∏ USD": "cur_USD",
        "üá∫üáø UZS": "cur_UZS",
        "üá∑üá∫ RUB": "cur_RUB",
    }
    builder = InlineKeyboardBuilder()
    for text, callback_data in api_currencies.items():
        if callback_data != exclude_callback:
            builder.add(InlineKeyboardButton(text=text, callback_data=callback_data))
    builder.adjust(2)
    return builder.as_markup()


def get_converter_menu_kb():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∫—É—Ä—Å—ã", callback_data="conv_menu_show_all"))
    builder.add(InlineKeyboardButton(text="üî¢ –û—Ç–∫—Ä—ã—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä", callback_data="conv_menu_open_converter"))
    return builder.as_markup()


def get_skip_comment_kb():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_comment"))
    return builder.as_markup()


def add_back_button(builder: InlineKeyboardBuilder, back_to_state: str):
    if back_to_state:
        builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back_to_{back_to_state}"))
